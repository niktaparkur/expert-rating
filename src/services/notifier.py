# src/services/notifier.py

from typing import Optional
from aionvk import Bot, Button, KeyboardBuilder

from src.core.config import settings
from src.schemas import event_schemas


class Notifier:
    def __init__(self, token: str):
        if not token:
            print("WARNING: VK_BOT_TOKEN is not set. Notifier will not send messages.")
            self.bot = None
        else:
            self.bot = Bot(token=token)

    async def _send_message(self, peer_id: int, message: str, keyboard=None):
        if not self.bot or not peer_id:
            return
        try:
            await self.bot.send_message(
                peer_id=peer_id, text=message, keyboard=keyboard
            )
        except Exception as e:
            print(f"Failed to send VK message to {peer_id}: {e}")

    async def send_new_request_to_admin(self, user_data: dict):
        vk_id = user_data.get("vk_id")
        first_name = user_data.get("first_name", "")
        last_name = user_data.get("last_name", "")
        message = (
            f"üîî –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —ç–∫—Å–ø–µ—Ä—Ç–∞!\n\n"
            f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {first_name} {last_name} (vk.com/id{vk_id})"
        )
        kb = KeyboardBuilder(inline=True)
        deep_link = f"https://vk.com/app{settings.VK_APP_ID}#/admin?vk_id={vk_id}"
        kb.add(Button.open_link("–†–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞—è–≤–∫—É", link=deep_link))
        await self._send_message(settings.ADMIN_ID, message, kb.build())

    async def send_new_event_to_admin(self, event_name: str, expert_name: str):
        message = (
            f"üìÖ –ù–æ–≤–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é!\n\n"
            f"–ù–∞–∑–≤–∞–Ω–∏–µ: ¬´{event_name}¬ª\n"
            f"–û—Ç —ç–∫—Å–ø–µ—Ä—Ç–∞: {expert_name}"
        )
        kb = KeyboardBuilder(inline=True)
        deep_link = f"https://vk.com/app{settings.VK_APP_ID}#/admin"
        kb.add(Button.open_link("–í –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", link=deep_link))
        await self._send_message(settings.ADMIN_ID, message, kb.build())

    async def send_moderation_result(
        self, vk_id: int, approved: bool, reason: Optional[str] = None
    ):
        if approved:
            message = "‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≤ '–†–µ–π—Ç–∏–Ω–≥–µ —ç–∫—Å–ø–µ—Ä—Ç–æ–≤' –æ–¥–æ–±—Ä–µ–Ω–∞! –¢–µ–ø–µ—Ä—å –≤–∞–º –¥–æ—Å—Ç—É–ø–µ–Ω –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏."
        else:
            message = f"‚ùå –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.\n–ü—Ä–∏—á–∏–Ω–∞: {reason or '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'}"
        await self._send_message(vk_id, message)

    async def send_event_status_notification(
        self,
        expert_id: int,
        event_name: str,
        approved: bool,
        reason: Optional[str] = None,
    ):
        if approved:
            message = f"‚úÖ –í–∞—à–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ ¬´{event_name}¬ª –æ–¥–æ–±—Ä–µ–Ω–æ –∏ –ø–æ—è–≤–∏—Ç—Å—è –≤ –∞—Ñ–∏—à–µ!"
        else:
            message = f"‚ùå –í–∞—à–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ ¬´{event_name}¬ª –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ.\n–ü—Ä–∏—á–∏–Ω–∞: {reason or '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'}"
        await self._send_message(expert_id, message)

    async def send_new_vote_notification(
        self, expert_id: int, vote_data: event_schemas.VoteCreate
    ):
        vote_type_text = (
            "üëç (–¥–æ–≤–µ—Ä—è—é)" if vote_data.vote_type == "trust" else "üëé (–Ω–µ –¥–æ–≤–µ—Ä—è—é)"
        )
        message = (
            f"üó≥Ô∏è –ù–æ–≤—ã–π –≥–æ–ª–æ—Å –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏!\n\n"
            f"–í—ã –ø–æ–ª—É—á–∏–ª–∏ –Ω–æ–≤—ã–π –≥–æ–ª–æ—Å: {vote_type_text}\n"
            f"–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ: {vote_data.promo_word}"
        )
        await self._send_message(expert_id, message)

    async def send_vote_action_notification(
        self, user_vk_id: int, expert_name: str, expert_vk_id: int, action: str
    ):
        """–£–≤–µ–¥–æ–º–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –µ–≥–æ –¥–µ–π—Å—Ç–≤–∏–∏ —Å –Ω–∞—Ä–æ–¥–Ω—ã–º –≥–æ–ª–æ—Å–æ–º."""
        if action == "submitted":
            message = f"‚úÖ –í–∞—à –≥–æ–ª–æ—Å –∑–∞ —ç–∫—Å–ø–µ—Ä—Ç–∞ {expert_name} –±—ã–ª —É—Å–ø–µ—à–Ω–æ —É—á—Ç–µ–Ω."
        elif action == "cancelled":
            message = f"üóëÔ∏è –í–∞—à –≥–æ–ª–æ—Å –∑–∞ —ç–∫—Å–ø–µ—Ä—Ç–∞ {expert_name} –±—ã–ª –æ—Ç–º–µ–Ω–µ–Ω."
        else:
            return

        kb = KeyboardBuilder(inline=True)
        deep_link = f"https://vk.com/app{settings.VK_APP_ID}#/expert/{expert_vk_id}"
        kb.add(Button.open_link("–ü–µ—Ä–µ–π—Ç–∏ –∫ –ø—Ä–æ—Ñ–∏–ª—é", link=deep_link))
        await self._send_message(user_vk_id, message, kb.build())

    async def close(self):
        if self.bot:
            await self.bot.close()
