import os
from typing import Optional
from aionvk import Bot, Button, KeyboardBuilder  # –£–±–µ–¥–∏—Å—å, —á—Ç–æ aionvk —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å ID –∞–¥–º–∏–Ω–∞ –∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
load_dotenv()

ADMIN_ID = int(os.environ.get("ADMIN_ID", 0))
APP_ID = int(os.environ.get("APP_ID", 0))


class Notifier:
    def __init__(self, token: str):
        if not token:
            print("WARNING: VK_BOT_TOKEN is not set. Notifier will not send messages.")
            self.bot = None
        else:
            self.bot = Bot(token=token)

    async def send_new_request_to_admin(self, user_data: dict):
        if not self.bot:
            return

        vk_id = user_data.get('vk_id')
        first_name = user_data.get('first_name', '')
        last_name = user_data.get('last_name', '')

        user_link = f"https://vk.com/id{vk_id}"
        message = (
            f"üîî –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —ç–∫—Å–ø–µ—Ä—Ç–∞!\n\n"
            f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {first_name} {last_name} ({user_link})\n"
            f"üìù –†–µ–≥–∞–ª–∏–∏: {user_data.get('regalia', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')}"
        )

        kb = KeyboardBuilder(inline=True)
        # Deep-link –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –∞–¥–º–∏–Ω–∫—É, –≤ —Ä–∞–∑–¥–µ–ª –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∑–∞—è–≤–∫–∏
        deep_link = f"https://vk.com/app{APP_ID}#admin/requests/{vk_id}"
        kb.add(Button.open_link("–†–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞—è–≤–∫—É", link=deep_link))

        try:
            await self.bot.send_message(peer_id=ADMIN_ID, text=message, keyboard=kb.build())
        except Exception as e:
            print(f"Failed to send admin notification: {e}")

    async def send_moderation_result(self, vk_id: int, approved: bool, reason: Optional[str] = None):
        if not self.bot:
            return

        if approved:
            message = "‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≤ '–†–µ–π—Ç–∏–Ω–≥–µ —ç–∫—Å–ø–µ—Ä—Ç–æ–≤' –æ–¥–æ–±—Ä–µ–Ω–∞! –¢–µ–ø–µ—Ä—å –≤–∞–º –¥–æ—Å—Ç—É–ø–µ–Ω –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏."
        else:
            message = f"‚ùå –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.\n–ü—Ä–∏—á–∏–Ω–∞: {reason or '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'}"

        try:
            await self.bot.send_message(peer_id=vk_id, text=message)
        except Exception as e:
            print(f"Failed to send moderation result to {vk_id}: {e}")

    async def close(self):
        if self.bot:
            await self.bot.close()